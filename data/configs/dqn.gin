# basic params
get_train_loop.alg_name='dqn'
TrainLoop.root_dir='/home/bachmann/test-pycharm/data'
TrainLoop.eval_interval = 3000
TrainLoop.num_eval_episodes = 5
TrainLoop.log_interval = 600

# state
TrainLoop.use_prev_action_as_obs=True
TrainLoop.state_obs_selection=(@BaseObservations(), @MinMaxBlockedAddress(), @DistVol())#, @FalsePositiveRate())

# action
TrainLoop.actionset_selection=@VeryLargeDiscreteActionSet()

# reward
HHHEnv.reward_calc=@DefaultRewardCalc()

# trace settings
DistributionTrace.traffic_trace_construct = @TRandomPatternSwitch
Loop.action_interval=10

# generic params
DQNWrapAgent.lr=5e-5
DQNWrapAgent.lr_decay_rate=0.96
DQNWrapAgent.lr_decay_steps=1000
DQNWrapAgent.eps_greedy=1.0
DQNWrapAgent.eps_greedy_end=0.0
DQNWrapAgent.eps_greedy_steps=75000
TrainLoop.gamma=0
TrainLoop.num_iterations = 300000
TrainLoop.batch_size = 64
TrainLoop.replay_buf_size = 150000
TrainLoop.initial_collect_steps = 1200
TrainLoop.log_interval = 600

# NN
#DQNWrapAgent.use_rnn=True
TrainLoop.train_sequence_length=1
#DQNWrapAgent.rnn_input_layers=(200, 200)
#DQNWrapAgent.rnn_lstm_size=(128, 128, 128)
#DQNWrapAgent.rnn_output_layers=(200,)
DQNWrapAgent.q_layers=(200,200,200)

# CNN parameters
include '/home/bachmann/test-pycharm/data/configs/cnn.gin'
DQNWrapAgent.cnn_spec=%cnn_256
DQNWrapAgent.cnn_act_func=@tf.keras.activations.relu
