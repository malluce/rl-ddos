# basic params
get_train_loop.alg_name='ppo'
TrainLoop.root_dir='/srv/bachmann/data/ppo'
TrainLoop.eval_interval = 6000
TrainLoop.num_eval_episodes = 9 # 3*3 possible combinations, play all of them
TrainLoop.log_interval = 600

# debug
TrainLoop.collect_raw = True # TODO warn
PPOWrapAgent.sum_grad_vars=False # TODO warn

# state
TrainLoop.use_prev_action_as_obs=False
TrainLoop.state_obs_selection=(@DummyState(),) #@MinMaxBlockedAddress(), @DistVol())#, @FalsePositiveRate())

Loop.sampling_rate=0.25
RulePerformanceTable.metric='fpr'
RulePerformanceTable.use_cache=True
RulePerformanceTable.cache_class=@TrackingWorstOffenderCache
TrackingWorstOffenderCache.metric='fpr'
TrackingWorstOffenderCache.capacity='inf'

# action
TrainLoop.actionset_selection=@ContinuousRejectionActionSet3()

# reward
#HHHEnv.reward_calc=@MultiplicativeRewardSpecificity()
#MultiplicativeReward.precision_weight=0
#MultiplicativeReward.recall_weight=1.25
#MultiplicativeReward.fpr_weight=1.25
#MultiplicativeReward.bl_weight=0.3

HHHEnv.reward_calc=@AdditiveRewardCalc()
AdditiveRewardCalc.precision_weight=0
AdditiveRewardCalc.recall_weight=1.75
AdditiveRewardCalc.fpr_weight=1.5
AdditiveRewardCalc.bl_weight=0.15

#HHHEnv.reward_calc=@DefaultRewardCalc()

# trace settings
DistributionTrace.traffic_trace_construct = @TRandomPatternSwitch
TRandomPatternSwitch.random_toggle_time=True
TRandomPatternSwitch.smooth_transition=True
TRandomPatternSwitch.benign_normal=True
Loop.action_interval=10

# generic params
PPOWrapAgent.lr=1e-5
TrainLoop.gamma=0
PPOWrapAgent.use_gae=True
PPOWrapAgent.gae_lambda=0.95
TrainLoop.num_iterations = 200000
PPOWrapAgent.gradient_clip=None

# PPO-specific params
_normal_projection_net.init_action_stddev=0.35
PPOWrapAgent.entropy_regularization=0
PPOWrapAgent.num_epochs=10
PPOWrapAgent.importance_ratio_clipping=0.15
PpoTrainLoop.num_parallel_envs = 1 # N
PpoTrainLoop.collect_steps_per_iteration_per_env = 5 # T

# act func for RNN/FFNN
PPOWrapAgent.actor_act_func=@tf.keras.activations.tanh
PPOWrapAgent.value_act_func=@tf.keras.activations.tanh

# RNN
#PPOWrapAgent.use_actor_rnn=True
#PPOWrapAgent.act_rnn_in_layers=(64,)
#PPOWrapAgent.act_rnn_lstm=(64,)
#PPOWrapAgent.act_rnn_out_layers=(64,)
#PPOWrapAgent.use_value_rnn=True
#PPOWrapAgent.val_rnn_in_layers=(64,)
#PPOWrapAgent.val_rnn_lstm=(64,)
#PPOWrapAgent.val_rnn_out_layers=(64,)

# FFNN
PPOWrapAgent.actor_layers=(256,256)
PPOWrapAgent.value_layers=(256,256)

# CNN parameters
include '/home/bachmann/test-pycharm/data/configs/cnn.gin'
PPOWrapAgent.cnn_act_func=@tf.keras.activations.relu
PPOWrapAgent.cnn_spec=%cnn_256_cropped
